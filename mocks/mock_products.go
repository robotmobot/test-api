// Code generated by MockGen. DO NOT EDIT.
// Source: ./controller/products.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"
	model "test-api/model"

	gomock "github.com/golang/mock/gomock"
)

// MockProductsRepo is a mock of ProductsRepo interface.
type MockProductsRepo struct {
	ctrl     *gomock.Controller
	recorder *MockProductsRepoMockRecorder
}

// MockProductsRepoMockRecorder is the mock recorder for MockProductsRepo.
type MockProductsRepoMockRecorder struct {
	mock *MockProductsRepo
}

// NewMockProductsRepo creates a new mock instance.
func NewMockProductsRepo(ctrl *gomock.Controller) *MockProductsRepo {
	mock := &MockProductsRepo{ctrl: ctrl}
	mock.recorder = &MockProductsRepoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockProductsRepo) EXPECT() *MockProductsRepoMockRecorder {
	return m.recorder
}

// GetAllProducts mocks base method.
func (m *MockProductsRepo) GetAllProducts() ([]model.Product, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAllProducts")
	ret0, _ := ret[0].([]model.Product)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAllProducts indicates an expected call of GetAllProducts.
func (mr *MockProductsRepoMockRecorder) GetAllProducts() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAllProducts", reflect.TypeOf((*MockProductsRepo)(nil).GetAllProducts))
}
